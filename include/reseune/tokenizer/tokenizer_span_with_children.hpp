#ifndef RESEUNE_TOKENIZER_SPAN_WITH_CHILDREN_HPP
#define RESEUNE_TOKENIZER_SPAN_WITH_CHILDREN_HPP

#include "../singly_linked_list/singly_linked_list.hpp"
#include "../singly_linked/singly_linked.hpp"

// =====================================================================================================================
namespace reseune {
  // ===================================================================================================================
  // tokenizer_span_with_children struct
  // ===================================================================================================================
  template <typename LABEL_T>
  struct tokenizer_span_with_children : public tokenizer_span<LABEL_T> {
    // =================================================================================================================
    // Member fields
    // =================================================================================================================

    singly_linked<tokenizer_span_with_children> * children;
    
    // =================================================================================================================
    // Constructors
    // =================================================================================================================
    constexpr tokenizer_span_with_children(
      const char * bb = nullptr,
      const char * ee = nullptr,
      bool         mm = true,
      LABEL_T      ll = static_cast<LABEL_T>(0)) :
      tokenizer_span<LABEL_T>(bb, ee, mm, ll), children(nullptr) {}

    // =================================================================================================================
  };
  // ===================================================================================================================
}
// =====================================================================================================================
#endif
